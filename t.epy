load "SYSTEM"
load "CONVERT"
load "RANDOM"

func playGame(min, max, maxAttempts, allowHints){
    secret = random(min, max)
    attempts = 0
    low = min
    high = max

    loop while (1) {
        prompt = strformat("Guess ({0}-{1}): ", low, high)
        inputStr = readln(prompt)
        input = toNumber(inputStr)

        if (input < min) {
            writeln("Value is below minimum. Try again.")
        }
        elif (input > max) {
            writeln("Value is above maximum. Try again.")
        }
        else {
            attempts = attempts + 1

            if (input == secret) {
                writeln(strformat("Correct! Number was {0}. Attempts: {1}", secret, attempts))
                ret attempts
            }

            if (input < secret) {
                writeln("Too small!")
                if (eq(allowHints, 1)) {
                    low = input + 1
                }
            }
            elif (gt(input, secret)) {
                writeln("Too big!")
                if (eq(allowHints, 1)) {
                    high = input - 1
                }
            }

            if (eq(allowHints, 1)) {
                diff = secret - input
                if (lt(diff, 0)) {
                    diff = diff * -1
                }
                if (lt(diff, 5)) {
                    writeln("You're burning!")
                }
                elif (lt(diff, 15)) {
                    writeln("Warm.")
                }
                else {
                    writeln("Cold.")
                }
            }

            if (and(gt(maxAttempts, 0), gt(attempts, maxAttempts))) {
                writeln(strformat("Out of attempts! The number was {0}.", secret))
                ret -1
            }
        }
    }
}

func main(){
    bestAttempts = 999999
    bestPlayer = "nobody"

    loop while (1) {
        writeln("=== Advanced Guess Game ===")
        writeln("1) Play Easy (1-20, hints)")
        writeln("2) Play Normal (1-100, hints)")
        writeln("3) Play Hard (1-1000, no hints, 25 attempts)")
        writeln("4) Custom")
        writeln("5) Show best")
        writeln("6) Exit")

        choice = toNumber(readln("Choice: "))

        if (eq(choice, 1)) {
            attempts = playGame(1, 20, 0, 1)
        }
        elif (eq(choice, 2)) {
            attempts = playGame(1, 100, 0, 1)
        }
        elif (eq(choice, 3)) {
            attempts = playGame(1, 1000, 25, 0)
        }
        elif (eq(choice, 4)) {
            min = toNumber(readln("Enter min value: "))
            max = toNumber(readln("Enter max value: "))
            if (gt(min, max)) {
                tmp = min
                min = max
                max = tmp
            }
            maxAttempts = toNumber(readln("Max attempts (0 = unlimited): "))
            hintChoice = toNumber(readln("Allow hints? (1 = yes, 0 = no): "))
            attempts = playGame(min, max, maxAttempts, hintChoice)
        }
        elif (eq(choice, 5)) {
            if (eq(bestPlayer, "nobody")) {
                writeln("No best score yet.")
            }
            else {
                writeln(strformat("Best: {0} with {1} attempts", bestPlayer, bestAttempts))
            }
            attempts = 0
        }
        elif (eq(choice, 6)) {
            writeln("Goodbye!")
            ret 0
        }
        else {
            writeln("Unknown choice, try again.")
            attempts = 0
        }

        if (gt(attempts, 0)) {
            if (lt(attempts, bestAttempts)) {
                name = readln("New best! Enter your name: ")
                bestAttempts = attempts
                bestPlayer = name
                writeln(strformat("Saved best: {0} with {1} attempts", bestPlayer, bestAttempts))
            }
            else {
                writeln(strformat("You finished with {0} attempts. Best is {1} by {2}", attempts, bestAttempts, bestPlayer))
            }
        }
    }
}

writeln(main())